[build-system]
requires = [
    "setuptools>=64",
    "setuptools-scm>=8.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "pywavelet.lisatools"
dynamic = ["version"] # scm versioning (using tags)
requires-python = ">=3.8"
description = "Utils for the LISA data analysis"
readme = "README.md"
authors = [
    { name = "Pywavelet Team", email = "pywavelet@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
]
dependencies = [
    "pywavelet",
    "scipy>=1.10.0", #
    "click",
    "numpy",
    "arviz",
    "eryn",
    "bilby",
    "gif",
    "numba",
    "matplotlib",
    "tqdm",
    "rich",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=4.1.0",
    "jupyter-book"
]


[tool.setuptools_scm]
version_file = "src/lisatools_wdm/_version.py"

[tool.semantic_release]
version_variable = "src/lisatools_wdm/_version.py:__version__"
version_source = "commit"
commit_version_number = true
commit_subject = "chore(release): {version}"
commit_message = "chore(release): {version}"
tag_format = "v{version}"
no_local_version = true


[tool.black]
line-length = 79
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 79


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = [
    "src/lisatools_wdm"
]

[tool.coverage.paths]
source = [
    "src/lisatools_wdm"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplentedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

ignore_errors = true


[[tool.mypy.overrides]]
module = "matplotlib.*,scipy.*,numba.*,bilby.*"
ignore_missing_imports = true
